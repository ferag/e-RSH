tosca_definitions_version: tosca_simple_yaml_1_0

imports:
 - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
 TOSCA examples for specifying a Chronos Job that runs an application using Onedata storage.

topology_template:
 inputs:
 input_onedata_token:
 type: string
 description: User token required to mount the user's INPUT Onedata space
 required: yes
 
 output_onedata_token:
 type: string
 description: User token required to mount the user's OUTPUT Onedata space. It can be the same as the input token
 required: yes
 
 input_onedata_providers:
 type: string
 description: csv list of favorite Onedata providers to be used to mount the Input Onedata space. If not provided, data locality algo will be applied.
 default: ''
 required: no
 
 output_onedata_providers:
 type: string
 description: csv list of favorite Onedata providers to be used to mount the Output Onedata space. If not provided, the same provider(s) used to mount the input space will be used.
 default: ''
 required: no
 
 input_onedata_space:
 type: string
 description: Onedata space where the application input data are stored
 required: yes
 
 input_path:
 type: string
 description: Path to the input data inside the Input Onedata space
 required: yes
 
 output_onedata_space:
 type: string
 description: Onedata space where the application output will be stored. It can be the same as the Input Onedata space
 required: yes

 
 output_path_1:
 type: string
 description: Path to the output data inside the Output Onedata space
 required: yes
 
 output_path_2:
 type: string
 description: Path to the output data inside the Output Onedata space
 required: yes
 
 output_path_3:
 type: string
 description: Path to the output data inside the Output Onedata space
 required: yes
 
 output_path_4:
 type: string
 description: Path to the output data inside the Output Onedata space
 required: yes
 

 output_filenames:
 type: string
 description: csv list of filenames generated by the application run
 default: ''
 required: yes
 
 command:
 type: string
 description: Command to execute
 default: 'cd && /bin/bash testcumul_error_run.sh'
 required: no
 
 cpus:
 type: float
 description: Amount of CPUs for this job
 required: yes
 
 mem:
 type: scalar-unit.size
 description: Amount of Memory for this job
 required: yes 
 
 docker_image:
 type: string
 description: Docker image to be used to run the container application
 required: yes

 N_1:
 type: integer

 N_2:
 type: integer

 N_3:
 type: integer

 N_4:
 type: integer


 node_templates:


 chronos_job1:
 type: tosca.nodes.indigo.Container.Application.Docker.Chronos
 properties:
 schedule: 'R0/2015-12-25T17:22:00Z/PT1M'
 description: 'Execute Application'
 command: { get_input: command }
 uris: ['https://raw.githubusercontent.com/maricaantonacci/e-RSH/master/scripts/EMSO-INGV/testcumul_error_run.sh']
 retries: 3
 environment_variables:
 PARAMETER_N: { get_input: N_1 }
 INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }
 OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }
 INPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }
 INPUT_PATH: { get_input: input_path }
 OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }
 OUTPUT_PATH: { get_input: output_path_1 }
 OUTPUT_FILENAMES: { get_input: output_filenames }
 artifacts:
 image:
 file: { get_input: docker_image}
 type: tosca.artifacts.Deployment.Image.Container.Docker
 requirements:
 - host: docker_runtime1


 docker_runtime1:
 type: tosca.nodes.indigo.Container.Runtime.Docker
 capabilities:
 host:
 properties:
 num_cpus: { get_input: cpus }
 mem_size: { get_input: mem }

 chronos_job2:
 type: tosca.nodes.indigo.Container.Application.Docker.Chronos
 properties:
 schedule: 'R0/2015-12-25T17:22:00Z/PT1M'
 description: 'Execute Application'
 command: { get_input: command }
 uris: ['https://raw.githubusercontent.com/maricaantonacci/e-RSH/master/scripts/EMSO-INGV/testcumul_error_run.sh']
 retries: 3
 environment_variables:
 PARAMETER_N: { get_input: N_2 }
 INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }
 OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }
 INPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }
 INPUT_PATH: { get_input: input_path }
 OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }
 OUTPUT_PATH: { get_input: output_path_2 }
 OUTPUT_FILENAMES: { get_input: output_filenames }
 artifacts:
 image:
 file: { get_input: docker_image}
 type: tosca.artifacts.Deployment.Image.Container.Docker
 requirements:
 - host: docker_runtime2


 docker_runtime2:
 type: tosca.nodes.indigo.Container.Runtime.Docker
 capabilities:
 host:
 properties:
 num_cpus: { get_input: cpus }
 mem_size: { get_input: mem }

 chronos_job3:
 type: tosca.nodes.indigo.Container.Application.Docker.Chronos
 properties:
 schedule: 'R0/2015-12-25T17:22:00Z/PT1M'
 description: 'Execute Application'
 command: { get_input: command }
 uris: ['https://raw.githubusercontent.com/maricaantonacci/e-RSH/master/scripts/EMSO-INGV/testcumul_error_run.sh']
 retries: 3
 environment_variables:
 PARAMETER_N: { get_input: N_3 }
 INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }
 OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }
 INPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }
 INPUT_PATH: { get_input: input_path }
 OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }
 OUTPUT_PATH: { get_input: output_path_3 }
 OUTPUT_FILENAMES: { get_input: output_filenames }
 artifacts:
 image:
 file: { get_input: docker_image}
 type: tosca.artifacts.Deployment.Image.Container.Docker
 requirements:
 - host: docker_runtime3


 docker_runtime3:
 type: tosca.nodes.indigo.Container.Runtime.Docker
 capabilities:
 host:
 properties:
 num_cpus: { get_input: cpus }
 mem_size: { get_input: mem }

 chronos_job4:
 type: tosca.nodes.indigo.Container.Application.Docker.Chronos
 properties:
 schedule: 'R0/2015-12-25T17:22:00Z/PT1M'
 description: 'Execute Application'
 command: { get_input: command }
 uris: ['https://raw.githubusercontent.com/maricaantonacci/e-RSH/master/scripts/EMSO-INGV/testcumul_error_run.sh']
 retries: 3
 environment_variables:
 PARAMETER_N: { get_input: N_4 }
 INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }
 OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }
 INPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
 INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }
 INPUT_PATH: { get_input: input_path }
 OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }
 OUTPUT_PATH: { get_input: output_path_4 }
 OUTPUT_FILENAMES: { get_input: output_filenames }
 artifacts:
 image:
 file: { get_input: docker_image}
 type: tosca.artifacts.Deployment.Image.Container.Docker
 requirements:
 - host: docker_runtime4


 docker_runtime4:
 type: tosca.nodes.indigo.Container.Runtime.Docker
 capabilities:
 host:
 properties:
 num_cpus: { get_input: cpus }
 mem_size: { get_input: mem }


