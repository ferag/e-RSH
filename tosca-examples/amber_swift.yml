tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
  TOSCA examples for specifying a Chronos Job that runs an application using the input stored at some URL and uploads the output data to a Swift container (using Swift auth 1 or Keystone)

topology_template:
  inputs:
    input_urls:
      type: string
      description: csv list of input files that will be downloaded in the job sandbox (archives will be automatically uncompressed)
      default: ''
      required: yes
  
    output_protocol:
      type: string
      description: Protocol that will be used to upload the output generated by the job
      constraints:
         - valid_values: [ swift+keystone, swift ]
      required: yes
  
    output_endpoint:
      type: string
      description: 'Auth URL of the Swift cluster (e.g. https://keystone-server.example.com:5000/v2.0 or http://swift-auth-server.example.com/auth/v1.0)'
      required: yes
  
    output_path:
      type: string
      description: Swift Container were the output files will be uploaded
      required: yes
  
    output_username:
      type: string 
      description: Username to access the swift account
      required: yes
  
    output_password:
      type: string
      description: Password to access the swift account 
      required: yes
  
    output_tenant:
      type: string
      description: 'keystone user tenant - required in case of authentication against keystone (protocol == swift+keystone)'
      default: ''
      required: no
  
    output_region:
      type: string 
      description: Swift region required in case of ambiguity
      default: ''
      required: no
  
    output_filenames:
      type: string
      description: List of filenames generated by the application run
      default: ''
      required: yes
  
    cpus:
      type: float
      description: Amount of CPUs for this job
      required: yes
    
    mem:
      type: scalar-unit.size
      description: Amount of Memory for this job
      required: yes
       

  node_templates:

    chronos_job:
      type: tosca.nodes.indigo.Container.Application.Docker.Chronos
      properties:
        schedule: 'R0/2015-12-25T17:22:00Z/PT1M'
        description: 'Execute Application'
        command: 'cd $MESOS_SANDBOX && wget https://gist.githubusercontent.com/maricaantonacci/8f597b12e556e21f2428fd397d9b78a8/raw/1c74ffd7b49219dbe938e06597c9cb541635b05f/amber_run.sh && /bin/bash amber_run.sh'
        uris: { get_input: input_urls}
        retries: 3
        environment_variables:
          OUTPUT_FILENAMES: { get_input: output_filenames }
          ONEDATA_SERVICE_TOKEN: 'TOKEN_TO_BE_SET_BY_THE_ORCHESTRATOR'
          ONEDATA_SPACE: 'DATA_SPACE_TO_BE_SET_BY_THE_ORCHESTRATOR'
          ONEDATA_PATH: 'PATH_TO_BE_SET_BY_THE_ORCHESTRATOR'
          ONEDATA_PROVIDERS: 'ONEDATA_PROVIDERS_TO_BE_SET_BY_THE_ORCHESTRATOR'
      artifacts:
        image:
          file: indigodatacloudapps/ambertools-oneclient:latest
          type: tosca.artifacts.Deployment.Image.Container.Docker
      requirements:
        - host: docker_runtime1


    chronos_job_upload:
      type: tosca.nodes.indigo.Container.Application.Docker.Chronos
      properties:
        description: 'Upload  application output data'
        command: /bin/bash /run.sh
        retries: 3
        environment_variables:
          OUTPUT_PROTOCOL: { get_input: output_protocol }
          OUTPUT_ENDPOINT: { get_input: output_endpoint }
          OUTPUT_PATH: { get_input: output_path }
          OUTPUT_USERNAME: { get_input: output_username }
          OUTPUT_PASSWORD: { get_input: output_password }
          OUTPUT_TENANT: { get_input: output_tenant }
          OUTPUT_REGION: { get_input: output_region }
          OUTPUT_FILENAMES: { get_input: output_filenames }
          ONEDATA_SERVICE_TOKEN: 'TOKEN_TO_BE_SET_BY_THE_ORCHESTRATOR'
          ONEDATA_SPACE: 'DATA_SPACE_TO_BE_SET_BY_THE_ORCHESTRATOR'
          ONEDATA_PATH: 'PATH_TO_BE_SET_BY_THE_ORCHESTRATOR'
          ONEDATA_PROVIDERS: 'ONEDATA_PROVIDERS_TO_BE_SET_BY_THE_ORCHESTRATOR'
      artifacts:
        image:
          file: indigodatacloud/chronos-job-upload:latest
          type: tosca.artifacts.Deployment.Image.Container.Docker
      requirements:
        - host: docker_runtime2
        - parent_job: chronos_job


    docker_runtime1:
      type: tosca.nodes.indigo.Container.Runtime.Docker
      capabilities:
        host:
          properties:
            num_cpus: { get_input: cpus }
            mem_size: { get_input: mem }


    docker_runtime2:
      type: tosca.nodes.indigo.Container.Runtime.Docker
      capabilities:
        host:
          properties:
            num_cpus: 1.0
            mem_size: 1024 MB

